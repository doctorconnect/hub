------Follow-------


<div class="profile-userfollower">
    <div class="row">
        <div class="col-sm-6"><span>@ViewBag.MyFollowing</span> Following</div>
        <div class="col-sm-6"><span>@ViewBag.MyFollowers</span> Followers</div>
    </div>
</div>





----------mymodal----------

@model KMTBusinessEntities.Blog
<div>
    <div class="modal-header">
        <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
        <h4 class="modal-title">Blog Details</h4>
    </div>
    <div class="modal-body">
        @using (Html.BeginForm("BlogPost", "User", FormMethod.Post))
        {
            @Html.HiddenFor(m => m.BlogId)
            <div class="form-group">
                <div>
                    @Html.LabelFor(m => m.Title)
                    @Html.EditorFor(m => m.Title, new { @class = "form-group" })

                    <div class="panel-body">
                        <div class="loaderCenter">
                            @Html.LabelFor(m => m.Message)
                            @Html.TextAreaFor(m => m.Message)
                            @Html.ValidationMessageFor(m => m.Message, "", new { @class = "error" })
                        </div>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="submit" id="postblog" class="btn btn-primary button button4">Update Post</button>
                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
            </div>
        }
    </div>
</div>


---------UserBadge-----------

@{
    List<KMTBusinessEntities.Points> PonitList = new KMTDataAccess.DirectoryDataAccess().GetPoints(Session["SerchUserNTID"].ToString());
    List<KMTBusinessEntities.BadgeModel> BadgeList = new KMTDataAccess.DirectoryDataAccess().GetListOfBadge();
    int RoleId = Convert.ToInt32(HttpContext.Current.Session["RoleId"]);
    int loggedUserId = Convert.ToInt32(HttpContext.Current.Session["Serchid"]);
    int x = 0;
    int Y = 10;
    int z = 0;
}
<div class="badges-icon">
    @foreach (var cp in PonitList)
    {
        foreach (var badge in BadgeList.Where(m => cp.Point <= m.BadgePointTo && cp.Point >= m.BadgePoint))
        {
            <ul>
                @if (@badge.BadgePointTo != 0)
                {
                    z = (@cp.Point + @Y);
                    x = (@badge.BadgePointTo - z);
                    string badgeName = badge.BadgeName; //+ "-";
                    <li><img src="data:image/png;base64,@badge.BImage" alt="" title="@Html.Raw(badgeName) with @z Points. Need @x Points for next level" style="width:30px;font-weight:600" /></li>
                }
            </ul>
        }
    }
</div>


-------------------UserBlog--------------

@{
    List<KMTBusinessEntities.Blog> BlogList = new KMTDataAccess.DirectoryDataAccess().GetBlogList();
    List<KMTBusinessEntities.posts> CommentList = new KMTDataAccess.DirectoryDataAccess().GetCommentListOnPost("BLOG");
    List<KMTBusinessEntities.posts> LikeList = new KMTDataAccess.DirectoryDataAccess().GetLikeCount("BLOG");
    int RoleId = Convert.ToInt32(HttpContext.Current.Session["RoleId"]);
}
@model KMTBusinessEntities.Blog
@foreach (var item in BlogList.Where(m => m.Status == 1 && m.BlogerId.ToString() == Session["Serchid"].ToString()))
{
    <div class="grey-border">
        <div class="media">
            <div class="media-body">
                <h4 class="media-heading" style="color:crimson">
                    @item.Title
                </h4>
                <hr />
                <p>@Html.Raw(@item.Message)</p>
                <h4 class="media-heading" align="right">  <a href="/User/UserProfile?Usercode=@item.UserCode"> @item.BlogBy</a></h4>
                @{

                }
            </div>
        </div>
        @if (CommentList.Where(l => l.PostId == item.BlogId).Count() > 0)
        {
            <hr />
        }

        <div class="actions-icon">
            <ul>
                <li> <button class="btn btn-default" title="Like Blog" onclick="window.location.href='/User/PostLikes?key=@item.BlogId&Identifier=BLOG'"> <i class="fa fa-thumbs-o-up"></i></button> @LikeList.Where(l => l.PostId == item.BlogId).Count()</li>
                <li><button class="btn btn-default" title="Comment On Blog" onclick="window.location.href='javascript:showhide(@item.BlogId)'"> <i class="fa fa-commenting"></i></button>  @CommentList.Where(l => l.PostId == item.BlogId).Count() </li>
                @*<li><button class="btn btn-default" title="Edit Blog" onclick="window.location.href='/Admin/UpdateBlog?key=@item.BlogId'"> <i class="glyphicon glyphicon-edit"></i> </button></li>*@
                <li><a href="javascript:void(0);" class="anchorDetail" data-id="@item.BlogId"><i class="glyphicon glyphicon-edit"></i></a></li>
                @if (RoleId == 1) // Role: Admin = 1
                {
                    <li><button class="btn btn-default" title="Delete Blog" onclick="DeleteBlog(@item.BlogId)"> <i class="fa fa-trash-o"></i> </button></li>
                }

            </ul>
        </div>
        <div style="display:none; margin-top:10px;" id="@item.BlogId" class="publishComment">
            @foreach (var cmt in CommentList.Where(l => l.PostId == item.BlogId))
            {
                <div class="media" style="align-content:center">
                    <ul>
                        <div class="media-left media-top">
                            <img src="../images/avatar2.png" alt="" class="media-object img-circle" style="width:40px">
                        </div>
                        <div class="media-body">
                            <h4 class="media-heading">
                                @cmt.CommentedByName
                                <small>@cmt.CommentedDate</small>
                            </h4>
                            <p>@cmt.Message</p>
                        </div>
                    </ul>
                </div>
            }


            @using (Html.BeginForm("SaveComment", "User", FormMethod.Post))
            {
                <div class="input-group input-group-sm">
                    <input type="hidden" name="PostId" id="@item.BlogId" value="@item.BlogId" />
                    <input type="hidden" name="Identifier" value="BLOG" />
                    <input type="text" name="txtcomment" id="txtcomment" class="form-control" placeholder="write a comment..." />
                    <div class="input-group-btn"><button type="submit" id="postComment" class="btn btn-primary button button4">Comment</button> </div>
                </div>
            }
        </div>
    </div>
}

<div>
    <fieldset>
        <div class="row">
            <div class="col-xs-12">

                <div class="modal fade" tabindex="-1" id="loginModal"
                     data-keyboard="false" data-backdrop="static">
                    <div class="modal-dialog modal-lg">
                        <div class="modal-content">
                            <div class="modal-header">
                                <button type="button" class="close" data-dismiss="modal">
                                    Ã—
                                </button>
                                <h4 class="modal-title">Blogs</h4>
                            </div>
                            <div class="modal-body">
                                @using (Html.BeginForm("BlogPost", "Home", FormMethod.Post))
                                {
                                    <div class="form-group">
                                        <div class="col-md-12">
                                            <div class="form-group">
                                                @Html.LabelFor(model => model.Title)
                                                @Html.EditorFor(model => model.Title, new { htmlAttributes = new { id = "txttitle" } })
                                            </div>
                                            <div class="form-group">
                                                @Html.LabelFor(model => model.Message)
                                                @Html.TextAreaFor(model => model.Message, new { @class = "form-control input-sm rich", id = "txtmessage" })
                                                @Html.ValidationMessageFor(model => model.Message)
                                            </div>
                                        </div>
                                    </div>
                                    <div class="modal-footer">
                                        <button type="submit" id="postblog" class="btn btn-primary button button4">Post</button>
                                        <button type="button" id="btnHideModal" data-dismiss="modal" class="btn btn-primary button button4">
                                            Cancel
                                        </button>
                                    </div>
                                }
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

    </fieldset>
</div>
<div id='myModalblg' class='modal'>
    <div class="modal-dialog">
        <div class="modal-content">
            <div id='myModalContent'></div>
        </div>
    </div>
</div>
<script src="~/CustomScripts/Blogs.js"></script>
<script>
    var TeamDetailPostBackURL = '/User/MyBlog';
    $(function () {
        $(".anchorDetail").click(function () {
            var $buttonClicked = $(this);
            var id = $buttonClicked.attr('data-id');
            $.ajax({
                type: "GET",
                url: TeamDetailPostBackURL,
                contentType: "application/json; charset=utf-8",
                data: { "Id": id },
                datatype: "json",
                success: function (data) {
                    $('#myModalContent').html(data);
                    $('#myModalblg').modal('show');
                },
                error: function (XMLHttpRequest, textStatus, errorThrown) {
                    window.location.href = "/Home/Error";
                }
            });
        });
    });

    function DeleteBlog(key) {
        var Identifier = "BLOG";
        $.confirm({
            title: '',
            type: 'red',
            content: '<p style="font-style:italic;">Are you sure, do you want to delete blog ?</p>',
            buttons: {
                confirm: function () {
                    $.ajax({
                        url: "/User/DeletePost",
                        method: 'post',
                        dataType: 'json',
                        data: { keyId: key, Identifier: Identifier },
                        success: function (data) {
                            location.reload();
                        },
                        error: function (XMLHttpRequest, textStatus, errorThrown) {
                            window.location.href = "/Home/Error";
                        }
                    });
                },
                cancel: function () {
                }
            }
        });
    }
</script>



---------------UserDocument--------------
@{
    /**/
    List<KMTBusinessEntities.UploadDocument> DocList = new KMTDataAccess.DirectoryDataAccess().GetListOfUploadDoc();
    List<KMTBusinessEntities.posts> CommentList = new KMTDataAccess.DirectoryDataAccess().GetCommentListOnPost("DOC");
    List<KMTBusinessEntities.posts> LikeList = new KMTDataAccess.DirectoryDataAccess().GetLikeCount("DOC");
    int RoleId = Convert.ToInt32(HttpContext.Current.Session["RoleId"]);
}
@model KMTBusinessEntities.UploadDocument
@if (DocList != null)
{
    foreach (var item in DocList.Where(m => m.Status == 1).Where(m => m.UploadBy == Session["Serchid"].ToString()))
    {<div class="grey-border">
            <div class="media">
                <div class="media-body">
                    <h4 class="media-heading"> Title :  @item.Title  </h4>
                    <h4 class="media-heading"> Category:  @item.Category </h4>
                    <h4 class="media-heading"> Tags  : @Html.Raw(@item.Message)  </h4>
                    <h4 class="media-heading" align="right"> <a href="/User/UserProfile?Usercode=@item.UserCode"> @item.UploadByName</a></h4>
                </div>
            </div>
            @if (CommentList.Where(l => l.PostId == item.ID).Count() > 0)
            {
                <hr />
            }

            <div class="actions-icon">
                <ul>
                    <li><button class="btn btn-default" title="Like Document" onclick="window.location.href='/User/PostLikes?key=@item.ID&Identifier=DOC'"> <i class="fa fa-thumbs-o-up"></i></button> @LikeList.Where(l => l.PostId == item.ID).Count() </li>
                    <li><button class="btn btn-default" title="Comment on  Document" onclick="window.location.href='javascript:showhide(@item.ID)'"> <i class="fa fa-commenting"></i> </button>  @CommentList.Where(l => l.PostId == item.ID).Count()</li>
                    <li><button class="btn btn-default" title="Download Document" onclick="window.location.href='/User/DownLoadDoc?key=@item.ID'"> <i class="fa fa-download"></i> </button></li>
                    @if (RoleId == 1) // Role: Admin = 1
                    {
                        <li><button class="btn btn-default" title="Delete  Document" onclick="DeletePost(@item.ID)"> <i class="fa fa-trash-o"></i> </button></li>
                        @*<li><button class="btn btn-default" title="Delete Document" onclick="window.location.href='/User/DeletePost?key=@item.ID&Identifier=DOC'"> <i class="fa fa-trash-o"></i> </button></li>*@
                    }
                </ul>
            </div>
            <div style="display:none;margin-top:10px;" id="@item.ID" class="publishComment">
                @foreach (var cmt in CommentList.Where(l => l.PostId == item.ID))
                {
                    <div class="media" style="align-content:center">
                        <ul>
                            <div class="media-left media-top">
                                <img src="../images/avatar2.png" alt="" class="media-object img-circle" style="width:40px">
                            </div>
                            <div class="media-body">
                                <h4 class="media-heading">
                                    @cmt.CommentedByName
                                    <small>@cmt.CommentedDate</small>
                                </h4>
                                <p>@cmt.Message</p>
                            </div>
                        </ul>
                    </div>
                }
                <hr />

                @using (Html.BeginForm("SaveComment", "User", FormMethod.Post))
                {
                    <div class="input-group input-group-sm">
                        <input type="hidden" name="PostId" id="@item.ID" value="@item.ID" />
                        <input type="hidden" name="Identifier" value="DOC" />
                        <input type="text" name="txtcomment" id="txtcomment" class="form-control" placeholder="write a comment..." />
                        <div class="input-group-btn">
                            <button type="submit" id="postComment" class="btn btn-primary button button4">Comment</button>
                        </div>
                    </div>
                }
            </div>
        </div>
    }
}

     <script type="text/javascript">
          function DeletePost(key) {
             var Identifier = "DOC";
             $.confirm({
                 title: '',
                 type: 'red',
                 content: '<p style="font-style:italic;">Are you sure, want to delete post ?</p>',
                 buttons: {
                     confirm: function () {
                         $.ajax({
                             url: "/User/DeletePost",
                             method: 'post',
                             dataType: 'json',
                             data: { keyId: key, Identifier: Identifier },
                             success: function (data) {
                                 location.reload();
                                 //window.location.href = '/Home/Index';
                             },
                             error: function (XMLHttpRequest, textStatus, errorThrown) {
                                 window.location.href = "/Home/Error";
                             }
                         });
                     },
                     cancel: function () {
                     }
                 }
             });
         }
     </script>
     
     
     ----------------UserPostandComments---------------
     @using KMTDataAccess;
@model KMTBusinessEntities.posts
@{
    List<KMTBusinessEntities.posts> PostList = new KMTDataAccess.DirectoryDataAccess().GetPost();
    List<KMTBusinessEntities.posts> CommentList = new KMTDataAccess.DirectoryDataAccess().GetCommentListOnPost("POST");
    List<KMTBusinessEntities.posts> LikeList = new KMTDataAccess.DirectoryDataAccess().GetLikeCount("POST");
    int RoleId = Convert.ToInt32(HttpContext.Current.Session["RoleId"]);
    int loggedUserId = Convert.ToInt32(HttpContext.Current.Session["ID"]);
}

@foreach (var cp in PostList.Where(m => m.PostedBy.Trim() == Session["Serchid"].ToString().Trim()))
{
    <!-- end grey border -->
    <div class="grey-border">
        <div class="media">
            <div class="media-left media-top">

                <img src="../images/avatar1.png" alt="" class="media-object img-circle" style="width:40px">
            </div>
            <div class="media-body">
                <h4 class="media-heading">
                    <a href="/User/UserProfile?Usercode=@cp.UserCode">@cp.PostedByName</a>
                    <time class="timeago"><small>@cp.PostedDate</small></time>
                </h4>
                @{
                    <p style="font:15px;color:black;">@cp.Message</p>
                }
            </div>
        </div>
        @if (CommentList.Where(l => l.PostId == cp.PostId).Count() > 0)
        {
            <hr />
        }
        <div class="actions-icon">
            <ul>
                <li> <button class="btn btn-default" title="Like Post" onclick="window.location.href='/User/PostLikes?key=@cp.PostId&Identifier=POST'"> <i class="fa fa-thumbs-o-up"></i> </button> @LikeList.Where(l => l.PostId == cp.PostId).Count()</li>
                <li><button class="btn btn-default" title="Comment On Post" onclick="window.location.href='javascript:showhide(@cp.PostId)'"> <i class="fa fa-commenting"></i> </button> @CommentList.Where(l => l.PostId == cp.PostId).Count()</li>
                @if (RoleId != Convert.ToInt32(RoleType.Facilitator))
                {
                    if (RoleId == Convert.ToInt32(RoleType.Admin))
                    {
                        <li><button class="btn btn-default" title="Delete Post" onclick="DeletePost(@cp.PostId)"> <i class="fa fa-trash-o"></i> </button></li>
                    }
                    else
                    {
                        if (loggedUserId == Convert.ToInt32(cp.PostedBy))
                        {
                            <li><button class="btn btn-default" title="Delete  Post" onclick="DeletePost(@cp.PostId)"> <i class="fa fa-trash-o"></i> </button></li>
                        }
                    }
                }
                <li><button class="btn btn-default" title="Report Post" onclick="window.location.href='/User/FlagPost?key=@cp.PostId&Id=@cp.UserCode'"><i class="fa fa-flag-o"></i> </button>  </li>
            </ul>
        </div>

        <div style="display:none; margin-top:10px;" id="@cp.PostId" class="publishComment">
            @foreach (var cmt in CommentList.Where(l => l.PostId == cp.PostId))
            {
                <div class="media" style="align-content:center">
                    <ul>
                        <div class="media-left media-top">
                            <img src="../images/avatar2.png" alt="" class="media-object img-circle" style="width:40px">
                        </div>
                        <div class="media-body">
                            <h4 class="media-heading">
                                <a href="/User/UserProfile?Usercode=@cmt.UserCode">@cmt.CommentedByName</a>
                                <small>@cmt.CommentedDate</small>
                            </h4>
                            <p>@cmt.Message</p>
                        </div>
                    </ul>
                </div>
            }

            @using (Html.BeginForm("SaveComment", "User", FormMethod.Post))
            {
                <div class="input-group input-group-sm">
                    <input type="hidden" name="PostId" id="@cp.PostId" value="@cp.PostId" />
                    <input type="hidden" name="Identifier" value="POST" />
                    <input type="text" name="txtcomment" id="txtcomment" class="form-control" placeholder="write a comment..." />
                    <div class="input-group-btn"><button type="submit" id="postComment" class="btn btn-primary">Comment</button></div>
                </div>
            }
        </div>
        <!-- end action icon -->
    </div>
    <!-- end grey border -->
}


<script type="text/javascript">
    function showhide(id) {
        var e = document.getElementById(id);
        e.style.display = (e.style.display == 'block') ? 'none' : 'block';
    }

    function DeletePost(key) {
        var Identifier = "POST";
        $.confirm({
            title: '',
            type: 'red',
            content: '<p style="font-style:italic;">Are you sure, want to Delete post ?</p>',
            buttons: {
                confirm: function () {
                    $.ajax({
                        url: "/User/DeletePost",
                        method: 'post',
                        dataType: 'json',
                        data: { keyId: key, Identifier: Identifier },
                        success: function (data) {
                            location.reload();
                        },
                        error: function (XMLHttpRequest, textStatus, errorThrown) {
                            window.location.href = "/Home/Error";
                        }
                    });
                },
                cancel: function () {
                }
            }
        });
    }

    $('#txtPost').keypress(function () {
        var maxLength = $(this).val().length;
        if (maxLength > 1000) {
            alert('You cannot enter more than 1000 chars');
            return false;
        }
    });

</script>






-----------------UserWhatsNew--------------

@{
    List<KMTBusinessEntities.Blog> BlogList = new KMTDataAccess.DirectoryDataAccess().GetDocblogList();
}
@foreach (var item in BlogList)
{
    <div class="grey-border">
        <div class="media">
            <div class="media-body">
                @if (item.Type.Contains("DOC"))
                {<h4 class="media-heading">
                        File Name :  @item.Title
                    </h4>
                    <p>File Description : @Html.Raw(@item.Message)</p>
                    <button class="btn btn-success" onclick="window.location.href='/Admin/DownLoadDoc?key= @item.Id'"> <i class="fa fa-download"></i> </button>
                }
                else
                {
                    <h4 class="media-heading">
                        Blog Title :  @item.Title
                    </h4>
                    <p>Blog Body @Html.Raw(@item.Message)</p>
                }
            </div>
        </div>
    </div>
}



--------------SearchResult------------------

@{
    ViewBag.Title = "Search Result";
    List<KMTBusinessEntities.UserRegistrationModel> UserList = new KMTDataAccess.DirectoryDataAccess().GetUserList("");
    List<KMTBusinessEntities.posts> PostList = new KMTDataAccess.DirectoryDataAccess().GetPost();
    List<KMTBusinessEntities.Blog> BlogList = new KMTDataAccess.DirectoryDataAccess().GetBlogList();
    List<KMTBusinessEntities.UploadDocument> DocList = new KMTDataAccess.DirectoryDataAccess().GetListOfUploadDoc();
    string SearchKey = Session["SearchKey"].ToString();
}

<div class="row">
    <div class="col-sm-3">
    </div>
    <div class="col-sm-6">
        <div class="nav-custom">
            <br /><br /><br /><br />
            @*<div class="input-group">
                    <input type="text" id="Search" class="form-control" placeholder="Search" name="Name">
                    <div class="input-group-btn">
                        <button class="btn btn-default" type="submit" id="btnSearch">
                            <i class="glyphicon glyphicon-search"></i>
                        </button>
                    </div>
                </div>*@
        </div>
        <br />
        <div class="nav-custom">
            <ul class="nav nav-tabs nav-justified">
                <li class="active"><a data-toggle="tab" href="#new">Peoples</a></li>
                <li><a data-toggle="tab" href="#post">Post</a></li>
                <li><a data-toggle="tab" href="#blog">Blog</a></li>
                <li><a data-toggle="tab" href="#doc">Documents</a></li>
            </ul>

            <div class="tab-content tab-custom Search">
                <div id="new" class="tab-pane fade in active ">
                    @if ((ViewBag.user_detail as ICollection<KMTBusinessEntities.UserRegistrationModel>).Count() != 0)
                    {
                        foreach (var item in ViewBag.user_detail)
                        {
                            string Applicant = @item.UserName;
                            <div class="grey-border">
                                <div class="media">

                                    <div class="media">
                                        <div class="media-left media-top">
                                            <a href="/User/UserProfile" onclick='navigate(this.href);'>
                                                <img src="~/Images/avatar1.png" class="img-circle" />
                                            </a>
                                        </div>
                                        <div class="media-body">
                                            <h4 class="media-heading">
                                                <a href="/User/UserProfile?Usercode=@item.UserCode.ToString()">Â» @item.UserName</a>
                                            </h4>
                                            <p>User NTID : @item.UserNTID</p>
                                            <p> Manager Name :@item.ManagerName</p>
                                            <p>User Email : @item.UserEmail </p>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        }
                    }
                    else
                    {
                        <div class="grey-border">
                            <div class="media">
                                <div class="media">
                                    <div class="media-left media-top">
                                        <a>
                                            <img src="~/Images/avatar1.png" class="img-circle" />
                                        </a>
                                    </div>
                                    <div class="media-body">
                                        <h4 class="media-heading">
                                            No matching results
                                        </h4>
                                    </div>
                                </div>
                            </div>
                        </div>
                    }
                </div>
                <div id="post" class="tab-pane fade">
                    @if (PostList.Where(p => p.PostedByName.Contains(SearchKey) || p.Message.Contains(SearchKey)).Count() != 0)
                    {
                        foreach (var cp in PostList.Where(p => p.PostedByName.Contains(SearchKey) || p.Message.Contains(SearchKey)))
                        {
                            <!-- end grey border -->
                            <div class="grey-border">
                                <div class="media">
                                    <div class="media-left media-top">
                                        <img src="../images/avatar1.png" alt="" class="media-object img-circle" style="width:40px">
                                    </div>
                                    <div class="media-body">
                                        <h4 class="media-heading">
                                            <a href="/User/UserProfile?Usercode=@cp.UserCode">Â» @cp.PostedByName</a>
                                            <time class="timeago"><small>@cp.PostedDate</small></time>
                                        </h4>
                                        @{
                                            <p style="font:15px;color:black;">@cp.Message</p>
                                        }
                                    </div>
                                </div>
                            </div>
                        }
                    }
                    else
                    {
                        <div class="grey-border">
                            <div class="media">
                                <div class="media">
                                    <div class="media-left media-top">
                                    </div>
                                    <div class="media-body">
                                        <h4 class="media-heading">
                                            No matching results
                                        </h4>
                                    </div>
                                </div>
                            </div>
                        </div>
                    }
                </div>
                <div id="blog" class="tab-pane fade">
                    @if (BlogList.Where(m => m.Status == 1 && (m.Message.Contains(SearchKey) || m.BlogBy.Contains(SearchKey))).Count() != 0)
                    {
                        foreach (var item in BlogList.Where(m => m.Status == 1 && (m.Message.Contains(SearchKey) || m.BlogBy.Contains(SearchKey))))
                        {
                            <div class="grey-border">
                                <div class="media">
                                    <div class="media-body">
                                        <h4 class="media-heading" style="color:crimson">
                                            @item.Title
                                        </h4>
                                        <hr />
                                        <p>@Html.Raw(@item.Message)</p>
                                        <h4 class="media-heading" align="right">Blog By :@item.BlogBy</h4>
                                    </div>
                                </div>
                            </div>
                        }
                    }
                    else
                    {
                        <div class="grey-border">
                            <div class="media">
                                <div class="media">
                                    <div class="media-left media-top">
                                    </div>
                                    <div class="media-body">
                                        <h4 class="media-heading">
                                            No matching results
                                        </h4>
                                    </div>
                                </div>
                            </div>
                        </div>
                    }
                </div>
                <div id="doc" class="tab-pane fade">
                    @if (DocList.Where(m => m.Status == 1 && (m.Title.Contains(SearchKey) || m.Name.Contains(SearchKey) || m.UploadByName.Contains(SearchKey) || m.Message.Contains(SearchKey))).Count() != 0)
                    {
                        foreach (var item in DocList.Where(m => m.Status == 1 && (m.Title.Contains(SearchKey) || m.Name.Contains(SearchKey) || m.UploadByName.Contains(SearchKey) || m.Message.Contains(SearchKey))))
                        {
                            <div class="grey-border">
                                <div class="media">
                                    <div class="media-body">
                                        <h4 class="media-heading"> Title :  @item.Title</h4>
                                        <h4 class="media-heading"> Category :  @item.Category </h4>
                                        <h4 class="media-heading"> File Name :  @item.Name </h4>
                                        <h4 class="media-heading"> File Description  : @Html.Raw(@item.Message)  </h4>
                                        <h4 class="media-heading" align="right">Uploaded By :@item.UploadByName</h4>
                                    </div>
                                </div>
                            </div>
                        }
                    }
                    else
                    {
                        <div class="grey-border">
                            <div class="media">

                                <div class="media">
                                    <div class="media-body">
                                        <h4 class="media-heading">
                                            No matching results
                                        </h4>
                                    </div>
                                </div>
                            </div>
                        </div>
                    }
                </div>
            </div>

        </div>

    </div>
    <div class="col-sm-3">
    </div>
</div>
<script>
    $(document).ready(function () {
        function Contains(text_one, Tex_two) {
            if (text_one.indexOf(Tex_two) != -1)
                return true;
        }
        $("#Search").keyup(function () {
            var searchtext = $("#Search").val().toLowerCase();
            $(".Search").each(function () {
                if (!Contains($(this).text().toLowerCase(), searchtext)) {
                    $(this).hide();
                }
                else {
                    $(this).show();
                }
            });
        });
    });
</script>

----------------------UserProfile----------------

@{
    ViewBag.Title = "UserProfile";
    int status = ((int)ViewBag.UserPhotoStatus);
    string BLOG = ""; string POST = ""; string DOC = ""; string Wnew = "in active";
}
<div class="container">
    @if (TempData["Success"] != null)
    {
        if (TempData["Success"].ToString() == "Comment Submit on POST successfully" || TempData["Success"].ToString() == "POST Like")
        { POST = "in active"; Wnew = ""; }
        else if (TempData["Success"].ToString() == "Comment Submit on BLOG successfully" || TempData["Success"].ToString() == "BLOG Like" || TempData["Success"].ToString() == "User Blog submitted successfully.")
        { BLOG = "in active"; Wnew = ""; }
        else if (TempData["Success"].ToString() == "Comment Submit on DOC successfully" || TempData["Success"].ToString() == "DOC Like")
        { DOC = "in active"; Wnew = ""; }
    }
    <div class="row">
        <div class="col-sm-3">
            <div class="grey-border">
                <div class="profile-sidebar">
                    <div class="profile-userpic text-center">
                        @if (status == 1)
                        {
                            <img src="@ViewBag.UserPhoto" class="img-thumbnail img-circle" alt="" style="width:150px">
                        }
                        else
                        {
                            <img src="~/Images/avatar1.png" class="img-thumbnail img-circle" alt="" style="width:150px">
                        }
                    </div>
                    <!-- end sidebar profile-userpic -->
                    <div class="profile-usertitle">
                        <div class="profile-usertitle-name">
                            @ViewBag.UserName<br>
                            @Convert.ToString(Session["Department"])
                        </div>
                        <div class="profile-usertitle-job">@ViewBag.LOBName</div>
                    </div>
                    <!-- end sidebar profile-usertitle -->
                    <div class="profile-userbuttons">
                        <div class="row">

                            <div class="col-sm-6">
                                @if (int.Parse(Convert.ToString(Session["status"])) > 0)
                                {
                                    <a href="@Url.Action("Following", "User",new {type = "UnFollow"})" class="btn btn-default btn-sm">UnFollow</a>
                                }
                                else
                                {
                                    <a href="@Url.Action("Following", "User",new {type = "Follow"})" class="btn btn-default btn-sm">Follow</a>
                                }
                            </div>
                            <div>
                                @Html.Partial("~/Views/User/_UserBadge.cshtml")
                                @*<img src="~/Images/UserBadge/Member.png" alt="" style="width:30px;" />*@
                                <!-- end badges sidebar -->
                            </div>
                            @*<div class="col-sm-6 text-center"><a href="#"><span class="glyphicon glyphicon-thumbs-up"></span></a></div>*@
                        </div>
                    </div>
                    <!-- end sidebar profile-userbuttons -->

                    @Html.Partial("~/Views/User/_Follow.cshtml")
                    <!-- end sidebar profile-followers -->
                    <hr>
                    <div class="profile-text">
                        <strong>About Me </strong><br>
                        @ViewBag.AboutMe
                    </div>
                    <!-- end sidebar profile-text -->
                </div>
                <!-- end profile sidebar -->
            </div>


            <!-- end grey border -->
            @*<div class="grey-border">
                    <div class="badges-sidebar">
                        <h2 class="text-center">BADGES</h2>
                        <hr>
                        <div class="badges-icon">
                            <ul>
                                <li><img src="~/images/badge1.jpg" alt="" /></li>
                                <li><img src="~/images/badge2.jpg" alt="" /></li>
                                <li><img src="~/images/badge3.jpg" alt="" /></li>
                            </ul>
                        </div>
                        <!-- end badge icon -->
                    </div>
                    <!-- end badges sidebar -->
                </div>*@
            <!-- end grey border -->
            <!-- end grey border -->
        </div>
        <!-- end right section -->

        <div class="col-sm-6">
            <div class="nav-custom">
                <ul class="nav nav-tabs nav-justified">
                    <li><a data-toggle="tab" id="W" href="#new">What's New</a></li>
                    <li><a data-toggle="tab" id="P" href="#post">Post</a></li>
                    <li><a data-toggle="tab" id="B" href="#blog">Blog</a></li>
                    <li><a data-toggle="tab" id="D" href="#doc">Documents</a></li>
                </ul>

                <div class="tab-content tab-custom">
                    <div id="new" class="tab-pane fade @Wnew ">
                        @Html.Partial("~/Views/User/_UserWhatsNew.cshtml")
                    </div>
                    <div id="post" class="tab-pane fade @POST">
                        @Html.Partial("~/Views/User/_UserPostAndComments.cshtml")
                    </div>
                    <!-- end grey border -->
                    <div id="blog" class="tab-pane fade @BLOG">
                        @Html.Partial("~/Views/User/_UserBlog.cshtml")
                    </div>
                    <div id="doc" class="tab-pane fade @DOC">
                        @Html.Partial("~/Views/User/_UserDocument.cshtml")
                    </div>
                </div>
            </div>

        </div>
        <!-- end mid section -->
        <!-- end left section -->
    </div>
</div>

