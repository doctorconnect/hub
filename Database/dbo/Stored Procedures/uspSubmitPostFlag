
CREATE PROCEDURE [dbo].[uspSubmitPostFlag]  
(  			 
 @PostId INT, 
 @CapId INT ,
 @FlagedBy  VARCHAR(50),                            
 @CreatedBy  VARCHAR(50),
 @CreatedOn DATETIME,
 @Points  VARCHAR(10)                            
)                                                      
AS                                                      
BEGIN        
    BEGIN TRANSACTION;      
      SAVE TRANSACTION MySavePoint;  
	   DEClARE @UserName VARCHAR(50) = NULL,
	   @UserCode VARCHAR(50) = NULL
	  
	    SET @UserName = (SELECT UserName FROM KMTUserRegistration WHERE UserNTID = (SELECT CreatedBy FROM Posts WHERE PostId = @PostId))
	    SET @UserCode = (SELECT UserCode FROM KMTUserRegistration WHERE UserNTID = (SELECT CreatedBy FROM Posts WHERE PostId = @PostId))         
		 BEGIN TRY  
			BEGIN               
				INSERT INTO KMTPostFlag  (PostId,Status, CreatedBy,CreatedOn,ModifiedBy,ModifiedOn,CapId)
				VALUES (@PostId,'0',@FlagedBy,@CreatedOn,'','',@CapId);	
				INSERT INTO KMTPointEarnSystem (Points,Pes_Id, Pes_type,Pes_by,Pes_On)
				VALUES (@Points,@PostId,'Flagpost',@CreatedBy,@CreatedOn); 
				INSERT INTO KMTNotification(RoleId,UserCode,IsAdminFlag,IsUserFlag,IsFacilitatorFlag,Identifier,AdminDescripation,UserDescripation,CreatedOn) 
				VALUES('1,12',@UserCode,0,0,0,'PostFlagged','<b>' + @UserName + '''s </b> post <b>' + (SELECT [Message] FROM Posts WHERE PostId = @PostId) + '</b> has been flagged','Your post <b>' + (SELECT [Message] FROM Posts WHERE PostId = @PostId) + '</b> has been flagged',@CreatedOn);	
	        END		     			                    
         END TRY       
      BEGIN CATCH      
        IF @@TRANCOUNT > 0      
        BEGIN      
            ROLLBACK TRANSACTION MySavePoint;       
        END      
      END CATCH                                                 
     COMMIT TRANSACTION                                                  
END
GO
