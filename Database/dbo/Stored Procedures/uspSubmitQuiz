
CREATE PROCEDURE [dbo].[uspSubmitQuiz]  
(  	
 @QuizID  INT,
 @CapId int,		 
 @QuizName  VARCHAR(80),
 @FromDate DATETIME,
 @ToDate DATETIME,
 @IsActive BIT,
 @CreatedBy VARCHAR(50),
 @CreatedOn DATETIME,
 @ModifiedBy VARCHAR(50),
 @ModifiedOn  DATETIME,
 @Points INT                        
)                                                      
AS                                                      
BEGIN      
    BEGIN TRANSACTION;      
      SAVE TRANSACTION MySavePoint;        
	     DEClARE @UserName VARCHAR(50) = NULL,
		 @UserCode VARCHAR(50) = NULL
		  
		 SET @UserName = (SELECT UserName FROM KMTUserRegistration WHERE UserNTID = @CreatedBy)
		 SET @UserCode = (SELECT UserCode FROM KMTUserRegistration WHERE UserNTID = @CreatedBy)
		 BEGIN TRY
		 IF(@QuizID=0)   
		 BEGIN               
		    INSERT INTO KMTQuiz (QuizName,FromDate,ToDate,IsActive,CreatedBy,CreatedOn,ModifiedBy,ModifiedOn,CapId) VALUES (@QuizName,@FromDate,@ToDate,@IsActive,@CreatedBy,@CreatedOn,@ModifiedBy,@ModifiedOn,@CapId);
		    INSERT INTO KMTPointEarnSystem ( Points,[Pes_Id], Pes_type,Pes_by,Pes_On) VALUES ( @Points,@QuizId,'CreatePKT',@CreatedBy,@CreatedOn);	
		    INSERT INTO KMTNotification(RoleId,UserCode,IsAdminFlag,IsUserFlag,IsFacilitatorFlag,Identifier,AdminDescripation,UserDescripation,CreatedOn)
		    VALUES('1,10',@UserCode,0,0,0,'QuizCreated','<b>' + @UserName + '</b> has created quiz <b>' + @QuizName + '</b>',NULL,@CreatedOn);
		 END
		 ELSE IF(@QuizID>0)   
		 BEGIN               
			UPDATE KMTQuiz SET QuizName = @QuizName,FromDate=@FromDate,ToDate=@ToDate,ModifiedBy=@ModifiedBy,ModifiedOn=@ModifiedOn ,IsActive=@IsActive WHERE QuizID = @QuizID;
			INSERT INTO KMTNotification(RoleId,UserCode,IsAdminFlag,IsUserFlag,IsFacilitatorFlag,Identifier,AdminDescripation,UserDescripation,CreatedOn) 
			VALUES('1,10',@UserCode,0,0,0,'QuizUpdated','<b>' + @UserName + '</b> has updated quiz <b>' + @QuizName + '</b>',NULL,@ModifiedOn) 
		 END 
		 END TRY       
		 BEGIN CATCH      
         IF @@TRANCOUNT > 0      
         BEGIN      
            ROLLBACK TRANSACTION MySavePoint;       
         END      
      END CATCH                                                 
     COMMIT TRANSACTION                                                  
END
GO
